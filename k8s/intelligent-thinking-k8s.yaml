apiVersion: v1
kind: Namespace
metadata:
  name: intelligent-thinking
  labels:
    name: intelligent-thinking
---
# ConfigMap for shared configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: intelligent-thinking
data:
  DATABASE_URL: "postgresql://postgres:password@postgres:5432/intelligent_thinking"
  REDIS_URL: "redis://redis:6379"
  NEO4J_URL: "bolt://neo4j:7687"
  ELASTICSEARCH_URL: "http://elasticsearch:9200"
  KAFKA_URL: "kafka:9092"
  CONSUL_URL: "consul:8500"
  PROMETHEUS_URL: "prometheus:9090"
  GRAFANA_URL: "grafana:3000"
  JAEGER_URL: "jaeger:14268"
---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: intelligent-thinking
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  OPENAI_API_KEY: ""
  ANTHROPIC_API_KEY: ""
  GOOGLE_AI_API_KEY: ""
  JWT_SECRET: ""
  ENCRYPTION_KEY: ""
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: intelligent-thinking
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer
---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: intelligent-thinking
spec:
  selector:
    app: api-gateway
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: intelligent-thinking
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: ghcr.io/your-repo/intelligent-thinking/frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "http://api-gateway:8080"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: intelligent-thinking
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ghcr.io/your-repo/intelligent-thinking/microservice-api-gateway:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# HorizontalPodAutoscaler for auto-scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: intelligent-thinking
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: intelligent-thinking-ingress
  namespace: intelligent-thinking
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - intelligent-thinking.example.com
    secretName: intelligent-thinking-tls
  rules:
  - host: intelligent-thinking.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8080 